<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dmswide.nowcoder.dao.MessageMapper">
    <select id="selectConversations" resultType="com.dmswide.nowcoder.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from community.message
        where id in(
            select max(id)
            from community.message
            where status != 2 and from_id != 1 and (from_id = #{userId} or to_id =#{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectConversationsCount" parameterType="Integer" resultType="Integer">
        select count(m.maxId)
        from (
            select max(id) as maxId
            from community.message
            where status != 2 and from_id != 1 and (from_id = #{userId} or to_id =#{userId})
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="com.dmswide.nowcoder.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from community.message
        where status != 2 and from_id != 1 and conversation_id = #{conversationId}
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectLettersCount" resultType="Integer">
        select count(id)
        from community.message
        where status != 2 and from_id != 1 and conversation_id = #{conversationId}
    </select>

    <select id="selectLettersUnreadCount" resultType="Integer">
        select count(id)
        from community.message
        <trim prefix="where" prefixOverrides="and |or ">
            and status = 0 and from_id != 1
            <if test="userId != null and userId != ''">
                and to_id = #{userId}
            </if>
            <if test="conversationId != null and conversationId != ''">
                and conversation_id = #{conversationId}
            </if>
        </trim>
    </select>

    <insert id="insertMessage" parameterType="com.dmswide.nowcoder.entity.Message" useGeneratedKeys="true" keyProperty="id">
        insert into community.message(from_id, to_id, conversation_id, content, status, create_time)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <!--循环变量可是是ids 也可以是list-->
    <update id="updateStatus">
        update community.message
        set status = #{status}
        where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>